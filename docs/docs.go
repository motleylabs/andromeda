// Code generated by swaggo/swag. DO NOT EDIT.

package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {
            "name": "API Support",
            "url": "http://www.swagger.io/support",
            "email": "support@swagger.io"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/collections/activities": {
            "post": {
                "description": "get the activities with related to the collection",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "collections"
                ],
                "summary": "Get collection activities",
                "parameters": [
                    {
                        "description": "Search parameters",
                        "name": "params",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/types.ActivityParams"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/types.ActivityRes"
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/collections/detail/{address}": {
            "get": {
                "description": "get collection detail information with the address",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "collections"
                ],
                "summary": "Get collection detail",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Collection Address",
                        "name": "address",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/types.Collection"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/collections/nfts": {
            "post": {
                "description": "get the list of NFTs of the collection",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "collections"
                ],
                "summary": "Get collection NFTs",
                "parameters": [
                    {
                        "description": "Search parameters",
                        "name": "params",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/types.NFTParams"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/types.NFTRes"
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/collections/series": {
            "post": {
                "description": "get the historical stats for the collection",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "collections"
                ],
                "summary": "Get collection historical data",
                "parameters": [
                    {
                        "description": "Search parameters",
                        "name": "params",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/types.TimeSeriesParams"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/types.TimeSeriesRes"
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/collections/trend": {
            "post": {
                "description": "get trending collections",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "collections"
                ],
                "summary": "Get collection trends",
                "parameters": [
                    {
                        "description": "Search parameters",
                        "name": "params",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/types.TrendParams"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/types.TrendRes"
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        }
    },
    "definitions": {
        "types.Activity": {
            "type": "object",
            "properties": {
                "activityType": {
                    "type": "string"
                },
                "buyer": {
                    "type": "string"
                },
                "createdAt": {
                    "type": "string"
                },
                "image": {
                    "type": "string"
                },
                "martketplaceProgramAddress": {
                    "type": "string"
                },
                "mint": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "price": {
                    "type": "string"
                },
                "seller": {
                    "type": "string"
                },
                "signature": {
                    "type": "string"
                },
                "symbol": {
                    "type": "string"
                }
            }
        },
        "types.ActivityParams": {
            "type": "object",
            "properties": {
                "activityTypes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "example": [
                        "LISTING"
                    ]
                },
                "address": {
                    "type": "string",
                    "example": "8xBMPGAj5NzAwRmdfEcksDcZyexr87AAmD6LWwKG7Dqq"
                },
                "limit": {
                    "type": "integer",
                    "example": 10
                },
                "offset": {
                    "type": "integer",
                    "example": 0
                }
            }
        },
        "types.ActivityRes": {
            "type": "object",
            "properties": {
                "activities": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/types.Activity"
                    }
                },
                "hasNextPage": {
                    "type": "boolean"
                }
            }
        },
        "types.Attribute": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string",
                    "example": "Background"
                },
                "type": {
                    "type": "string",
                    "example": "CATEGORY"
                },
                "values": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "example": [
                        "Vivid-tangerine"
                    ]
                }
            }
        },
        "types.Collection": {
            "type": "object",
            "properties": {
                "attributes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/types.Attribute"
                    }
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "image": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "statistics": {
                    "$ref": "#/definitions/types.Statistics"
                },
                "symbol": {
                    "type": "string"
                },
                "verifiedCollectionAddress": {
                    "type": "string"
                }
            }
        },
        "types.NFT": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "image": {
                    "type": "string"
                },
                "lastSold": {
                    "type": "string"
                },
                "listingType": {
                    "type": "string"
                },
                "mintAddress": {
                    "type": "string"
                },
                "moonrankRank": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "owner": {
                    "type": "string"
                },
                "projectId": {
                    "type": "string"
                },
                "sellerFeeBasisPoints": {
                    "type": "integer"
                },
                "symbol": {
                    "type": "string"
                },
                "tokenStandard": {
                    "type": "string"
                },
                "traits": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/types.Trait"
                    }
                },
                "uri": {
                    "type": "string"
                }
            }
        },
        "types.NFTParams": {
            "type": "object",
            "properties": {
                "attributes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/types.Attribute"
                    }
                },
                "collection": {
                    "type": "string",
                    "example": "8xBMPGAj5NzAwRmdfEcksDcZyexr87AAmD6LWwKG7Dqq"
                },
                "limit": {
                    "type": "integer",
                    "example": 10
                },
                "offset": {
                    "type": "integer",
                    "example": 0
                },
                "order": {
                    "type": "string",
                    "example": "ASC|DESC"
                },
                "sort_by": {
                    "type": "string",
                    "example": "lowest_listing_block_timestamp"
                }
            }
        },
        "types.NFTRes": {
            "type": "object",
            "properties": {
                "hasNextPage": {
                    "type": "boolean"
                },
                "nfts": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/types.NFT"
                    }
                }
            }
        },
        "types.Statistics": {
            "type": "object",
            "properties": {
                "floor1d": {
                    "type": "string"
                },
                "holders": {
                    "type": "integer"
                },
                "listed1d": {
                    "type": "string"
                },
                "marketCap": {
                    "type": "number"
                },
                "supply": {
                    "type": "integer"
                },
                "volume30d": {
                    "type": "string"
                }
            }
        },
        "types.TimeSeries": {
            "type": "object",
            "properties": {
                "floorPrice": {
                    "type": "string"
                },
                "holders": {
                    "type": "integer"
                },
                "listed": {
                    "type": "integer"
                },
                "timestamp": {
                    "type": "string"
                },
                "volume": {
                    "type": "integer"
                }
            }
        },
        "types.TimeSeriesParams": {
            "type": "object",
            "properties": {
                "collection": {
                    "type": "string",
                    "example": "8xBMPGAj5NzAwRmdfEcksDcZyexr87AAmD6LWwKG7Dqq"
                },
                "end_timestamp": {
                    "type": "integer",
                    "example": 1679410436
                },
                "limit": {
                    "type": "integer",
                    "example": 10
                },
                "offset": {
                    "type": "integer",
                    "example": 0
                },
                "start_timestamp": {
                    "type": "integer",
                    "example": 1671128400
                },
                "time_granularity": {
                    "type": "string",
                    "example": "PER_HOUR|PER_DAY"
                }
            }
        },
        "types.TimeSeriesRes": {
            "type": "object",
            "properties": {
                "hasNextPage": {
                    "type": "boolean"
                },
                "series": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/types.TimeSeries"
                    }
                }
            }
        },
        "types.Trait": {
            "type": "object",
            "properties": {
                "rarity": {
                    "type": "number"
                },
                "traitType": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            }
        },
        "types.Trend": {
            "type": "object",
            "properties": {
                "changeFloor1d": {
                    "type": "integer"
                },
                "changeFloor30d": {
                    "type": "integer"
                },
                "changeFloor7d": {
                    "type": "integer"
                },
                "changeListed1d": {
                    "type": "integer"
                },
                "changeListed30d": {
                    "type": "integer"
                },
                "changeListed7d": {
                    "type": "integer"
                },
                "changeVolume1d": {
                    "type": "integer"
                },
                "changeVolume30d": {
                    "type": "integer"
                },
                "changeVolume7d": {
                    "type": "integer"
                },
                "collection": {
                    "$ref": "#/definitions/types.Collection"
                },
                "floor1d": {
                    "type": "string"
                },
                "floor30d": {
                    "type": "string"
                },
                "floor7d": {
                    "type": "string"
                },
                "listed1d": {
                    "type": "string"
                },
                "listed30d": {
                    "type": "string"
                },
                "listed7d": {
                    "type": "string"
                },
                "volume1d": {
                    "type": "string"
                },
                "volume30d": {
                    "type": "string"
                },
                "volume7d": {
                    "type": "string"
                }
            }
        },
        "types.TrendParams": {
            "type": "object",
            "properties": {
                "limit": {
                    "type": "integer",
                    "example": 10
                },
                "offset": {
                    "type": "integer",
                    "example": 0
                },
                "order": {
                    "type": "string",
                    "example": "ASC|DESC"
                },
                "period": {
                    "type": "string",
                    "example": "1d|7d|1m"
                },
                "sort_by": {
                    "type": "string",
                    "example": "floor_price|volume|listed"
                }
            }
        },
        "types.TrendRes": {
            "type": "object",
            "properties": {
                "hasNextPage": {
                    "type": "boolean"
                },
                "trends": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/types.Trend"
                    }
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "",
	Host:             "",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "",
	Description:      "",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
