definitions:
  controllers.ReportRes:
    properties:
      solPrice:
        type: number
      tps:
        type: integer
      volume:
        type: number
    type: object
  types.ActionInfo:
    properties:
      auctionHouseAddress:
        type: string
      auctionHouseProgram:
        type: string
      blockTimestamp:
        type: integer
      price:
        type: string
      signature:
        type: string
      tradeState:
        type: string
      userAddress:
        type: string
    type: object
  types.Activity:
    properties:
      activityType:
        type: string
      auctionHouseAddress:
        type: string
      blockTimestamp:
        type: integer
      buyer:
        type: string
      image:
        type: string
      martketplaceProgramAddress:
        type: string
      mint:
        type: string
      name:
        type: string
      price:
        type: string
      seller:
        type: string
      signature:
        type: string
      symbol:
        type: string
    type: object
  types.ActivityRes:
    properties:
      activities:
        items:
          $ref: '#/definitions/types.Activity'
        type: array
      hasNextPage:
        type: boolean
    type: object
  types.AttributeOutput:
    properties:
      name:
        example: Background
        type: string
      type:
        example: CATEGORY
        type: string
      values:
        items:
          $ref: '#/definitions/types.AttributeStat'
        type: array
    type: object
  types.AttributeStat:
    properties:
      counts:
        type: integer
      floorPrice:
        type: string
      listed:
        type: integer
      value:
        type: string
    type: object
  types.BuyParams:
    properties:
      buyer:
        type: string
      buyerBroker:
        type: string
      mint:
        type: string
      price:
        type: string
    type: object
  types.CollectedCollection:
    properties:
      estimatedValue:
        type: string
      floorPrice:
        type: string
      id:
        type: string
      image:
        type: string
      name:
        type: string
      nftsOwned:
        type: integer
      slug:
        type: string
    type: object
  types.Collection:
    properties:
      attributes:
        items:
          $ref: '#/definitions/types.AttributeOutput'
        type: array
      description:
        type: string
      id:
        type: string
      image:
        type: string
      isVerified:
        type: boolean
      name:
        type: string
      slug:
        type: string
      statistics:
        $ref: '#/definitions/types.Statistics'
      symbol:
        type: string
      verifiedCollectionAddress:
        type: string
    type: object
  types.NFT:
    properties:
      description:
        type: string
      highestBid:
        $ref: '#/definitions/types.ActionInfo'
      image:
        type: string
      lastSale:
        $ref: '#/definitions/types.ActionInfo'
      latestListing:
        $ref: '#/definitions/types.ActionInfo'
      mintAddress:
        type: string
      moonrankRank:
        type: integer
      name:
        type: string
      owner:
        type: string
      projectId:
        type: string
      sellerFeeBasisPoints:
        type: integer
      symbol:
        type: string
      tokenStandard:
        type: string
      traits:
        items:
          $ref: '#/definitions/types.Trait'
        type: array
      uri:
        type: string
    type: object
  types.NFTActivity:
    properties:
      activityType:
        type: string
      auctionHouseAddress:
        type: string
      blockTimestamp:
        type: integer
      buyer:
        type: string
      martketplaceProgramAddress:
        type: string
      price:
        type: string
      seller:
        type: string
      signature:
        type: string
    type: object
  types.NFTActivityRes:
    properties:
      activities:
        items:
          $ref: '#/definitions/types.NFTActivity'
        type: array
      hasNextPage:
        type: boolean
    type: object
  types.NFTRes:
    properties:
      hasNextPage:
        type: boolean
      nfts:
        items:
          $ref: '#/definitions/types.NFT'
        type: array
    type: object
  types.ObjInfo:
    properties:
      address:
        type: string
      imgURL:
        type: string
      isVerified:
        type: boolean
      name:
        type: string
      slug:
        type: string
      twitter:
        type: string
      volume1d:
        type: string
    type: object
  types.SearchRes:
    properties:
      hasNextPage:
        type: boolean
      results:
        items:
          $ref: '#/definitions/types.ObjInfo'
        type: array
    type: object
  types.StatRes:
    properties:
      marketCap:
        type: integer
      volume:
        type: integer
      volume1d:
        type: integer
    type: object
  types.Statistics:
    properties:
      floor1d:
        type: string
      holders:
        type: integer
      listed1d:
        type: string
      marketCap:
        type: string
      supply:
        type: integer
      volume1d:
        type: string
    type: object
  types.TimeSeries:
    properties:
      floorPrice:
        type: string
      holders:
        type: integer
      listed:
        type: integer
      timestamp:
        type: string
      volume:
        type: integer
    type: object
  types.TimeSeriesRes:
    properties:
      hasNextPage:
        type: boolean
      series:
        items:
          $ref: '#/definitions/types.TimeSeries'
        type: array
    type: object
  types.Trait:
    properties:
      rarity:
        type: number
      traitType:
        type: string
      value:
        type: string
    type: object
  types.Trend:
    properties:
      changeFloor1d:
        type: number
      changeListed1d:
        type: number
      changeVolume1d:
        type: number
      changeVolume1h:
        type: number
      changeVolume7d:
        type: number
      changeVolume30d:
        type: number
      collection:
        $ref: '#/definitions/types.Collection'
      floor1d:
        type: string
      listed1d:
        type: string
      volume1d:
        type: string
      volume1h:
        type: string
      volume7d:
        type: string
      volume30d:
        type: string
    type: object
  types.TrendRes:
    properties:
      hasNextPage:
        type: boolean
      trends:
        items:
          $ref: '#/definitions/types.Trend'
        type: array
    type: object
  types.UserNFT:
    properties:
      collections:
        items:
          $ref: '#/definitions/types.CollectedCollection'
        type: array
      nfts:
        items:
          $ref: '#/definitions/types.NFT'
        type: array
    type: object
info:
  contact:
    email: support@swagger.io
    name: API Support
    url: http://www.swagger.io/support
paths:
  /collections/{address}:
    get:
      consumes:
      - application/json
      description: get collection detail information with the address
      parameters:
      - description: Collection slug
        in: path
        name: address
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/types.Collection'
        "500":
          description: Internal Server Error
      summary: Get collection detail
      tags:
      - collections
  /collections/activities:
    get:
      consumes:
      - application/json
      description: get the activities with related to the collection
      parameters:
      - description: Collection slug
        in: query
        name: address
        required: true
        type: string
      - description: Limit
        in: query
        name: limit
        required: true
        type: integer
      - description: Offset
        in: query
        name: offset
        required: true
        type: integer
      - description: Activity types (['listing'])
        in: query
        name: activity_types
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/types.ActivityRes'
        "400":
          description: Bad Request
        "500":
          description: Internal Server Error
      summary: Get collection activities
      tags:
      - collections
  /collections/nfts:
    get:
      consumes:
      - application/json
      description: get the list of NFTs of the collection
      parameters:
      - description: Collection slug
        in: query
        name: address
        required: true
        type: string
      - description: 'NFT attributes to filter ([{''name'': ''Tattoos'', ''type'':
          ''CATEGORY'', ''values'': [''Barbwire'']}])'
        in: query
        name: attributes
        type: string
      - description: Only listed NFTs? (true|false)
        in: query
        name: listing_only
        type: string
      - description: Marketplace program address
        in: query
        name: program
        type: string
      - description: Auction house address
        in: query
        name: auction_house
        type: string
      - description: Sort By (lowest_listing_block_timestamp)
        in: query
        name: sort_by
        required: true
        type: string
      - description: Order (asc|desc)
        in: query
        name: order
        required: true
        type: string
      - description: Limit
        in: query
        name: limit
        required: true
        type: integer
      - description: Offset
        in: query
        name: offset
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/types.NFTRes'
        "400":
          description: Bad Request
        "500":
          description: Internal Server Error
      summary: Get collection NFTs
      tags:
      - collections
  /collections/series:
    get:
      consumes:
      - application/json
      description: get the historical stats for the collection
      parameters:
      - description: Collection slug
        in: query
        name: address
        required: true
        type: string
      - description: Start timestamp
        in: query
        name: from_time
        required: true
        type: integer
      - description: End timestamp
        in: query
        name: to_time
        required: true
        type: integer
      - description: Granularity (per_hour|per_day)
        in: query
        name: granularity
        required: true
        type: string
      - description: Limit
        in: query
        name: limit
        required: true
        type: integer
      - description: Offset
        in: query
        name: offset
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/types.TimeSeriesRes'
        "400":
          description: Bad Request
        "500":
          description: Internal Server Error
      summary: Get collection historical data
      tags:
      - collections
  /collections/trend:
    get:
      consumes:
      - application/json
      description: get trending collections
      parameters:
      - description: Period (1h|1d|7d)
        in: query
        name: period
        required: true
        type: string
      - description: Sort by (volume)
        in: query
        name: sort_by
        required: true
        type: string
      - description: Order (asc|desc)
        in: query
        name: order
        required: true
        type: string
      - description: Limit
        in: query
        name: limit
        required: true
        type: integer
      - description: Offset
        in: query
        name: offset
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/types.TrendRes'
        "400":
          description: Bad Request
        "500":
          description: Internal Server Error
      summary: Get collection trends
      tags:
      - collections
  /nfts/{address}:
    get:
      consumes:
      - application/json
      description: get detail information about the NFT
      parameters:
      - description: NFT address
        in: path
        name: address
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/types.NFT'
        "500":
          description: Internal Server Error
      summary: Get NFT detail
      tags:
      - nfts
  /nfts/activities:
    get:
      consumes:
      - application/json
      description: get the activities with related to the NFT
      parameters:
      - description: NFT address
        in: query
        name: address
        required: true
        type: string
      - description: Activity Types (['listing'])
        in: query
        name: activity_types
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/types.NFTActivityRes'
        "400":
          description: Bad Request
        "500":
          description: Internal Server Error
      summary: Get NFT activities
      tags:
      - nfts
  /nfts/buy:
    post:
      consumes:
      - application/json
      description: get the byte array for transaction to buy the NFT
      parameters:
      - description: Input data
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/types.BuyParams'
      produces:
      - application/json
      responses:
        "200":
          description: Buffered Tx
          schema:
            items:
              type: integer
            type: array
        "400":
          description: Bad Request
        "500":
          description: Internal Server Error
      summary: Get transaction data for buying NFT
      tags:
      - nfts
  /nfts/offers:
    get:
      consumes:
      - application/json
      description: get the offers with related to the NFT
      parameters:
      - description: NFT address
        in: query
        name: address
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/types.NFTActivity'
            type: array
        "500":
          description: Internal Server Error
      summary: Get NFT offers
      tags:
      - nfts
  /rpc/report:
    get:
      consumes:
      - application/json
      description: get information like solana tps, price
      parameters:
      - description: auction house address
        in: path
        name: address
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controllers.ReportRes'
        "500":
          description: Internal Server Error
      summary: Get Report
      tags:
      - rpc
  /stat/overall:
    get:
      consumes:
      - application/json
      description: get information like total market cap, volume
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/types.StatRes'
        "500":
          description: Internal Server Error
      summary: Get Overall Stats
      tags:
      - stats
  /stat/search:
    get:
      consumes:
      - application/json
      description: Search collections, users by name
      parameters:
      - description: Search mode(collection)
        in: query
        name: mode
        required: true
        type: string
      - description: Search keyword
        in: query
        name: keyword
        required: true
        type: string
      - description: Page limit
        in: query
        name: limit
        required: true
        type: string
      - description: Page offset
        in: query
        name: offset
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/types.SearchRes'
        "500":
          description: Internal Server Error
      summary: Search collections, users
      tags:
      - stats
  /users/activities:
    get:
      consumes:
      - application/json
      description: get the activities with related to the wallet
      parameters:
      - description: Wallet address
        in: query
        name: address
        required: true
        type: string
      - description: Limit
        in: query
        name: limit
        required: true
        type: integer
      - description: Offset
        in: query
        name: offset
        required: true
        type: integer
      - description: Activity types (['listing'])
        in: query
        name: activity_types
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/types.ActivityRes'
        "400":
          description: Bad Request
        "500":
          description: Internal Server Error
      summary: Get user activities
      tags:
      - users
  /users/nfts:
    get:
      consumes:
      - application/json
      description: get the nfts of the wallet
      parameters:
      - description: Wallet address
        in: query
        name: address
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/types.UserNFT'
        "500":
          description: Internal Server Error
      summary: Get user NFTs
      tags:
      - users
  /users/offers:
    get:
      consumes:
      - application/json
      description: get the offers with related to the wallet
      parameters:
      - description: Wallet address
        in: query
        name: address
        required: true
        type: string
      - description: Limit
        in: query
        name: limit
        required: true
        type: integer
      - description: Offset
        in: query
        name: offset
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/types.ActivityRes'
        "400":
          description: Bad Request
        "500":
          description: Internal Server Error
      summary: Get user offers
      tags:
      - users
swagger: "2.0"
